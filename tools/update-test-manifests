#!/usr/bin/env python3
"""
Updates the repository snapshot date defined in the 'vars' fragments in test/data/manifests/ and regenerates all test
manifests.
"""
import json
import pathlib
import sys
from glob import glob

import yaml


def read_schutzfile():
    with open("Schutzfile", mode="r", encoding="utf-8") as schutzfile:
        return json.load(schutzfile)


def find_snapshot_date(distro, arch, schutzfile):
    # Each distro can have multiple lists of repositories. We assume all share the same snapshot date, so we only check
    # the first one.
    repos = schutzfile[distro]["repos"][0][arch]
    first_url = repos[0]["baseurl"]
    *_, date = first_url.split("-")
    return date


def main():
    vars_files = glob("test/data/manifests/*-vars.ipp.yaml")

    schutzfile = read_schutzfile()

    for vf in vars_files:
        vars_file = pathlib.Path(vf)
        with vars_file.open(mode="r", encoding="utf-8") as vfp:
            vars_data = yaml.load(vfp, Loader=yaml.SafeLoader)

        # NOTE: this relies on the filename to discover the distro, which isn't perfect because the file names can be
        # arbitrary, but realistically we always name them based on the distro
        distro_name, *_ = vars_file.parts[-1].split("-")
        if distro_name == "centos":
            distro_name += "-stream"
        distro_ver = vars_data["mpp-vars"]["release"]
        arch = vars_data["mpp-vars"]["arch"]
        distro = f"{distro_name}-{distro_ver}"
        vars_date = vars_data["mpp-vars"]["snapshot"]

        if distro not in schutzfile:
            print(f"Distro {distro} for ipp.vars file {vars_file} not found in Schutzfile.", file=sys.stderr)
            print("Failed to update ipp.vars files.", file=sys.stderr)
            sys.exit(1)

        schutzfile_date = find_snapshot_date(distro, arch, schutzfile)
        if vars_date == schutzfile_date:
            print(f"{vars_file}:\n  Snapshot dates match: {vars_date}")
            continue

        print(f"{vars_file}:\n  Updating snapshots from {vars_date} to {schutzfile_date}")
        vars_data["mpp-vars"]["snapshot"] = schutzfile_date

        with vars_file.open(mode="w", encoding="utf-8") as vfp:
            yaml.dump(vars_data, vfp, width=9999, sort_keys=False)


if __name__ == "__main__":
    main()
